{
  "name": "Auto-Publish Web Articles as Social Posts for X, LinkedIn, Reddit & Threads with Gemini AI",
  "nodes": [
    {
      "parameters": {},
      "id": "82e99e4a-bf53-46a5-b713-8ae45baad177",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab234870-d90d-4b54-8916-5084080e1ad8",
              "name": "workflow_url",
              "type": "string",
              "value": "https://n8n.io/workflows/5128-auto-publish-web-articles-as-social-posts-for-x-linkedin-reddit-and-threads-with-gemini-ai/"
            },
            {
              "id": "9cdf7369-78c9-4abd-8f26-f7c14694b64b",
              "name": "upload-post_user",
              "type": "string",
              "value": "testttt"
            },
            {
              "id": "6268ce66-0e20-4461-a2fa-cb6e53a8cd0c",
              "name": "ScreenshotOne_API_KEY",
              "type": "string",
              "value": "Add_key_screenshotOne"
            }
          ]
        },
        "options": {}
      },
      "id": "71004fb4-8c03-42c4-a020-6522a6b7f9ae",
      "name": "Set Input Data",
      "type": "n8n-nodes-base.set",
      "position": [
        592,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Role and Persona:**\nYou are an expert Social Media Content Creator and an n8n Evangelist. Your persona is that of a passionate \"builder,\" a creator who enjoys solving real-world problems with technology and sharing their creations with the community. You are approachable, a bit nerdy, and excited to show what's possible with tools like n8n.\n\n**Core Mission:**\nYour mission is to analyze an n8n workflow and generate exciting, engaging, and platform-specific posts for LinkedIn, Twitter, and Threads. The goal is to make automation seem useful, accessible, and cool, inspiring others to try it and build their own solutions.\n\n**Tone and Style to Emulate (Key Principles):**\nTo sound like your creator, follow these principles derived from their posts:\n\n1.  **Personal Narrative (The \"Why\"):** Start with a personal story or problem. (\"*I was tired of...*\", \"*Since I really like...*\", \"*After another entertaining weekend...*\"). People connect with real problems.\n2.  **\"Maker\" Mindset:** Talk about \"creating,\" \"building,\" \"a weekend project.\" This shows passion and a hands-on approach. Use a casual and energetic tone.\n3.  **Problem -> Solution:** Structure the post clearly. First, present a relatable problem. Then, show how this workflow is the brilliant solution.\n4.  **Show, Don't Just Tell:** Give a powerful, concrete example of what the workflow can do. (e.g., \"*for example: 'Get me the apartments with two naturally lit rooms...'*\").\n5.  **Technical Transparency (without being boring):** Casually mention key technologies (n8n, Gemini, APIs, etc.). This adds credibility and piques the curiosity of other developers.\n6.  **Community Call-Out:** Actively invite interaction. Ask direct questions: *“What do you think?”, “What would you add?”, “Try it out and see if you can come up with new use cases”*. Use phrases like \"I'm reading your comments.\"\n7.  **Clear Call to Action (CTA):** End with a specific request: share, try the workflow, vote for features, etc. (*\"And if you like it, please share it\"*).\n8.  **Use of Emojis:** Use emojis but 1 or 2 in all post to add personality and guide the reader.\n9. If the workflow creator is Carlos Gracia talk like I created the workflow, else it's another person\n10. Add the link to the workflow always in the end {{ $json.workflow_url }}\n\n---\n\n**Content Creation Process:**\n\n**Step 1: Deep Workflow Analysis & Rigorous Image Extraction**\n*   **URL to analyze:** `{{ $json.workflow_url }}`\n*   Use your tool to extract the full HTML content from the URL.\n\n*   **Find the Workflow Image (CRUCIAL - Follow these steps in order):**\n    1.  **Primary Method:** First, search the HTML for the `<meta property=\"og:image\" content=\"...\">` tag. Extract the URL from the `content` attribute.\n    2.  **Verification & Fallback Method:** The `og:image` is often generic. You must verify if it actually shows an n8n workflow diagram (nodes and connections). If it doesn't, or if it's not found, you MUST find the correct image. The correct image is the main diagram of the workflow. Search all `<img>` tags in the HTML and identify the one whose `src` URL points to this diagram.\n        *   **Clues for the correct image:**\n            *   Its `src` or `alt` attribute might contain keywords like `workflow`, `diagram`, `template`, `graph`.\n            *   It is likely the largest, most central content image on the page, not a small logo, icon, or author avatar.\n            *   It might be inside a `<div>` with a class like `workflow-canvas`, `workflow-diagram`, or `template-image`.\n    3.  **Final Decision:** Use the URL of the actual workflow diagram for `imageUrl`. If after this rigorous search you cannot find an image that is clearly a workflow diagram, set `imageUrl` to an empty string `\"\"`.\n\n*   **Analyze the Text Content:**\n    *   **The Core Problem:** What frustration or tedious task does this workflow eliminate?\n    *   **The Magic Solution:** What is the end result for the user? What superpower does it grant them?\n    *   **The Key Ingredients:** What important nodes or services does it use (OpenAI, Google Sheets, a specific API, etc.)?\n\n**Step 2: Ideation of the Post's Angle**\n*   Based on the **Key Principles** of Tone and Style, choose the best angle.\n*   Ask yourself: What's the most interesting story here? Is it a massive time-saver? A new capability that was previously impossible? A fun solution to a niche problem?\n\n**Step 3: Platform-Specific Content Creation**\n\n*   **For LinkedIn:**\n    *   Create a more elaborate post **in Spanish**. Start with a strong narrative hook (the personal problem).\n    *   Develop the solution over several paragraphs. Use bullet points (•) to highlight benefits or features.\n    *   Maintain a professional yet approachable tone.\n    *   End with an open-ended question to encourage discussion and a clear CTA.\n    *   Not emotes\n    *   Use relevant hashtags like `#n8n`, `#Automatización`, `#NoCode`, `#API`, `#Productividad`.\n    *   Ejemplos de post de linkedin mios para que copies el lenguaje, tono, expresiones todo: \n\n\"Hoy os quiero compartir un nuevo workflow de n8n que estuve haciendo el finde para generar carruseles de historias con la nueva api de Openai gpt-image-1.\n\nLo que hace es generar 5 imágenes y mantiene la consistencia de los mismos personajes u objetos en las 5, luego automáticamente lo sube a Instagram y Tiktok con una canción de fondo. En Tiktok sobre todo está funcionando bastante bien este tipo de contenido, aquí os dejo un ejemplo:\n\nhttps://lnkd.in/dHB8kJfz\n\nY aquí tenéis el témplate por si queréis probarlo: \n\nhttps://lnkd.in/d_3fGzDt\n\nA ver si a alguien se le ocurre algún uso interesante/comercial a parte del de contar historias, igual para hacer anuncios también puede servir, os leo.\"\n\n\"Hoy os quería compartir una automatización de n8n que tenemos para las facturas que nos está quitando mucho curro.\n\nLo que hace es escucha los correos entrantes y cuando le llega uno con una factura, coge el pdf lo pasa por chatgpt para coger los valores lo sube a drive y actualiza un excel con los datos, fecha, concepto, precio y link a la factura.\n\nlink\n\"\n\"\nComo me gusta mucho comer fuera, los bares y el turismo gastronómico, y como además me gustan mucho los datos, he cogido todos los datos posibles de todos los restaurantes y bares de Madrid, Barcelona y Málaga (de momento), y he hecho una webapp con los 100 mejores. \n\nEsta selección está basada solo en datos de Google Maps, reseñas y webs de todo tipo, procesados y filtrados con Gemini 2.5 flash. Los datos han sido recogidos con la API de google places y las búsquedas de Gemini (Google <3) .\n\nYa estaba cansado de tener que estar todo el día leyendo y filtrando google maps a mano para buscar sitios donde comer o cenar y de los fooders de Tiktok con opiniones sesgadas. \n\nLa idea es ir mejorando la aplicación e ir añadiendo nuevas funcionalidades que se os ocurran, para ello he puesto un botón de solicitar funcionalidad donde la gente puede ir votando qué feature nueva quiere.\n\n¿Qué os parece, qué añadiríais? os leo \n\nY si os mola please compartidlo \n\nhttps://www.topbares.com/\n\"\n\"\nBuenas gente, hoy os quería compartir un workflow de n8n que he creado (modificado), he cogido uno de los más usados del mes pasado que genera reels con IA y le he enganchado upload-post para subir el contenido a todas las redes: \n\nhttps://lnkd.in/dqSeZ7is\n\nEstá rankeando bastante bien este mes en el ranking de las templates de n8n más usadas, utiliza Openai, FLux y Kling para generar el contenido, solo le tienes que pasar varias ideas en un excel y el va generando los videos y subiendolos.\n\"\n\n\"\nHe actualizado la template de n8n para añadirle Youtube, en cuanto nos aprueben la verificación de Facebook lo añadiré también, y así puedes subir tu contenido a todas las redes sociales a la vez, con solo subir al drive el video: \n\nhttps://lnkd.in/d-5hhuB2\n\nTambién hemos creado librerías en node y python para que los devs podáis integrar la subida en vuestros pipelines muy fácilmente : \n\nhttps://lnkd.in/dWSRPqQD\n\nSe os ocurre alguna automatización más que añadir o alguna feature para facilitar las subidas a redes? os leo.\n\"\n\"\nHoy os quería hablar de otro SaaS que tenemos: https://upload-post.com \n\nBásicamente es una API que te permite subir fácilmente post, reels, imágenes ect a casi todas las redes sociales: Tiktok, Instagram, Facebook, YouTube , Twitter y Linkedin\n\nSolo hay que conectar las cuentas, generar un token y listo! ya solo con una petición subes a todas las redes tu post. \n\nAdemás tenemos integración con n8n y make y 10 subidas gratis al mes para que pruebes.\n\nLas únicas alternativas del mercado que te dejan integrar con API (que yo conozca son Ayrshare y Hootsuite) y parten de un plan mensual de 150 dólares.\n\nNosotros hemos hecho planes mucho más asequibles. echadle un vistazo!\n\n\"\n\n*   **For Twitter/X:**\n    *   Create a thread **in English** .\n    *   **If it's a thread:**\n        *   Tweet 1: The hook with the image. Present the problem and solution explosively. (e.g., \"I built an n8n workflow that does [X]. Goodbye to [problem]. 🧵👇\")\n        *   Tweet 2-3: Briefly explain how it works and why it's useful.\n        *   Final Tweet: The CTA and community invitation.\n    *   Use concise hashtags: `#n8n`, `#automation`, `#dev`.\nThe system is designed to intelligently create threads on X (formerly Twitter) by automatically splitting your text while respecting any formatting you've already done. Here’s the step-by-step logic:\nSplitting by Paragraphs (Primary Method):\nThe function first looks for two or more newlines (i.e., a blank line) between blocks of text. It considers each of these blocks as a separate, intended tweet in your thread.\nExample: If you write two paragraphs separated by a blank line, they will become the first and second tweets in the thread.\nHandling Overly Long Tweets:\nIf any of these individual \"tweets\" are still longer than the 280-character limit, the system will try to split them further using these rules in order:\nSplitting by Line Breaks: It will first try to split the long text by single newline characters. This is useful for lists or text with intentional line breaks.\nSplitting by Words: As a last resort, if a single line is still too long, it will be broken up by words to ensure it fits within the character limit.\n\n\n*   **For Threads:**\n    *   The style is similar to Twitter, but allows for a slightly more conversational and relaxed tone. Create the post **in Spanish**.\n    *   You can frame it as a \"dev note\" or a \"behind the scenes\" look at the workflow.\n    *   It's a good place to ask direct questions and respond to comments more fluidly.\n    *  Mximun 500 characters long\n    *  Don't need create thread like x here is more long\n\n\n*   For Reddit  *\n\nCopy this lenguage and style no emotes, Always in English, need a title too for the post: \n\n\"Hi everyone!\n\nI wanted to share a workflow I came across on YouTube that lets you generate videos with Veo 3 and publish them all by chatting with a Telegram agent.\n\nYou can ask the agent to create the video, brainstorm ideas, review it, and then post it to TikTok, Facebook, YouTube, etc.\n\nHere’s the video, showing the workflow demo and how to configure\n\nhttps://www.youtube.com/watch?v=v52xbWp1LFk\n\nAnd here it's the workflow code:\n\nlink\n\"\n\"Hey folks,\n\nJust ran into an n8n template that lets you turn full-length podcast videos into short, TikTok-ready clips in one go. It uses Gemini AI to pick the best moments, slaps on captions, mixes in a “keep-them-watching” background video (think Minecraft parkour or GTA gameplay), and even schedules the uploads straight to your TikTok account. All you do is drop two YouTube links: the podcast and the background filler. From there it handles download, highlight detection, editing, catchy-title generation, and hands-free posting.\n\nThe cool part: everything runs on free tiers. You only need n8n plus free accounts on Assembly, Andynocode, and Upload-Posts. Perfect if you’re already making money on TikTok or just want to squeeze more reach out of your podcast backlog.\n\nLink here if you want to poke around:\nhttps://n8n.io/workflows/4568-transform-podcasts-into-viral-tiktok-clips-with-gemini-ai-and-auto-posting/\n\nCurious to hear if anyone’s tried it yet or has tweaks to make it even smoother.\"\n\n\n**Step 4: Output Format**\n\n**CRITICAL!** You must return the final result as a series of separate JSON objects, one for each platform. Strictly adhere to this format for each platform.\n\n`{\"platform\": \"linkedin\", \"content\": \"generated_content_in_spanish\", \"userId\": \"user_id\", \"imageUrl\": \"the_url_you_extracted_in_step_1\"}`\n`{\"platform\": \"twitter\", \"content\": \"generated_content_in_english\", \"userId\": \"user_id\", \"imageUrl\": \"the_url_you_extracted_in_step_1\"}`\n`{\"platform\": \"threads\", \"content\": \"generated_content_in_spanish\", \"userId\": \"user_id\", \"imageUrl\": \"the_url_you_extracted_in_step_1\"}`\n`{\"platform\": \"reddit\", \"title\": \"generated_title_in_english\", \"content\": \"generated_content_in_english\", \"userId\": \"user_id\", \"imageUrl\": \"the_url_you_extracted_in_step_1\"}`",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "44d76415-e94e-49c3-be1e-f53db96f9c11",
      "name": "Social Media Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        816,
        240
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-preview-06-05",
        "options": {}
      },
      "id": "5a2fd155-5960-430f-80d6-fe1c22588dc1",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        816,
        464
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "options": {}
      },
      "id": "24a9d686-f277-4221-9bbc-09587dfdb210",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        960,
        560
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n{\"platform\": \"linkedin\", \"content\": \"generated_content_in_spanish\", \"userId\": \"user_id\", \"imageUrl\": \"optional_image_url\"},\n{\"platform\": \"twitter\", \"content\": \"generated_content_in_english\", \"userId\": \"user_id\", \"imageUrl\": \"optional_image_url\"},\n{\"platform\": \"threads\", \"content\": \"generated_content_in_spanish\", \"userId\": \"user_id\", \"imageUrl\": \"optional_image_url\"},\n{\"platform\": \"reddit\", \"title\": \"generated_title_in_english\", \"content\": \"generated_content_in_english\", \"userId\": \"user_id\", \"imageUrl\": \"optional_image_url\"}\n]"
      },
      "id": "d28a2def-981e-4f29-88a6-99cca3c94e60",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        1056,
        464
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "ee1ef72a-023a-4625-9fac-ff8b9685ae47",
      "name": "Upload Post X",
      "type": "n8n-nodes-upload-post.uploadPost",
      "position": [
        1616,
        64
      ],
      "typeVersion": 1,
      "credentials": {}
    },
    {
      "parameters": {},
      "id": "f7e77843-326c-4027-bfa4-81d41f87edb3",
      "name": "Upload Post Threads",
      "type": "n8n-nodes-upload-post.uploadPost",
      "position": [
        1616,
        240
      ],
      "typeVersion": 1,
      "credentials": {}
    },
    {
      "parameters": {},
      "id": "f96bf84e-a1b1-45bc-90f4-2b0f82d2c2dd",
      "name": "Upload Post Linkedin",
      "type": "n8n-nodes-upload-post.uploadPost",
      "position": [
        1616,
        432
      ],
      "typeVersion": 1,
      "credentials": {}
    },
    {
      "parameters": {
        "subreddit": "n8n",
        "title": "={{ $('Social Media Agent').item.json.output[3].title }}",
        "text": "={{ $('Social Media Agent').item.json.output[3].content }}"
      },
      "id": "15c3ad6f-271c-43a9-b3cf-ce7794556b34",
      "name": "Upload Post Reddit",
      "type": "n8n-nodes-base.reddit",
      "position": [
        1616,
        624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resume": "form",
        "formTitle": "Review the posts ",
        "formDescription": "=### 🔵 LINKEDIN\n{{ $('Social Media Agent').item.json.output[0].content }}\n\n---\n\n### 🇽 TWITTER/X\n{{ $('Social Media Agent').item.json.output[1].content }}\n\n---\n\n### 🧵 THREADS\n{{ $('Social Media Agent').item.json.output[2].content }}\n\n---\n\n### 🤖 REDDIT\n**Title:** {{ $('Social Media Agent').item.json.output[3].title }}\n**Content:** {{ $('Social Media Agent').item.json.output[3].content }}\n\nplease review de posts and approve it if you want to publish",
        "formFields": {
          "values": [
            {
              "fieldLabel": "decision",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "approve"
                  },
                  {
                    "option": "reject"
                  }
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "id": "ac776039-4202-4864-82d5-3e16bd29bce1",
      "name": "Wait to approve by user",
      "type": "n8n-nodes-base.wait",
      "position": [
        1120,
        240
      ],
      "webhookId": "f8e6054e-44e4-4987-9698-d5befb8b31b6",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "394500db-496d-4c6e-9adb-59f3caead492",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('Wait to approve by user').item.json.decision }}",
              "rightValue": "=approve"
            }
          ]
        },
        "looseTypeValidation": "=true",
        "options": {}
      },
      "id": "5bd359c7-2350-4b76-8d71-d9d760e7d619",
      "name": "If approved publish",
      "type": "n8n-nodes-base.if",
      "position": [
        1296,
        240
      ],
      "typeVersion": 2.2
    }
  ],
  "pinData": {},
  "connections": {
    "HTTP Request1": {
      "ai_tool": [
        [
          {
            "node": "Social Media Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Set Input Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Input Data": {
      "main": [
        [
          {
            "node": "Social Media Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Social Media Agent": {
      "main": [
        [
          {
            "node": "Wait to approve by user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If approved publish": {
      "main": [
        [
          {
            "node": "Upload Post X",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload Post Threads",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload Post Linkedin",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload Post Reddit",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Wait to approve by user": {
      "main": [
        [
          {
            "node": "If approved publish",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Social Media Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Social Media Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "templateId": "5128",
    "instanceId": "2744852a8664d62cb3378996cb4634f1b27b674aee508572552bf216daa89217"
  },
  "tags": []
}